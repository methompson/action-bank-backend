/**
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
  root: true,
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking'
  ],
  ignorePatterns: [
    '.eslintrc.js',
  ],
  plugins: [
    '@typescript-eslint',
    'jest',
  ],
  env: {
    'node': true,
    'jest/globals': true,
    'jest': true,
  },
  extends: [
    "plugin:jest/recommended"
  ],
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  parser: '@typescript-eslint/parser',
  rules: {
    "jest/no-disabled-tests": "warn",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "jest/prefer-to-have-length": "warn",
    "jest/valid-expect": "error",
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    'eqeqeq': [
      'error',
      'smart'
    ],
    '@typescript-eslint/require-await': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    'semi': 'off',
    '@typescript-eslint/semi': ['error'],
  }
};
