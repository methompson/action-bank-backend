**************************************************************************************
Exchanges
**************************************************************************************
mutation exchange {
  addExchange(
    name: "Test Exchange",
  ) {
    id,
  }
}

mutation exchange {
  deleteExchange(exchangeId: "")
}

query exchange {
  getExchangesByUserId(userId: "") {
    id,
  }
}

query getExchange {
  getExchangeById(exchangeId: "") {
    id,
    userId,
    name,
    description,
    totalCurrency,
    depositActions {
      id,
      name,
      uom,
      uomQuantity,
      depositQuantity,
      enabled,
      sortedLocation,
      dateUpdated,
    },
    withdrawalActions {
      id,
      name,
      uom,
      uomQuantity,
      withdrawalQuantity,
      enabled,
      sortedLocation,
      dateUpdated,
    },
    deposits {
      id,
      exchangeId,
      depositActionId,
      depositActionName,
      uomQuantity,
      depositQuantity,
      quantity,
      dateAdded,
    },
    withdrawals {
      id,
      exchangeId,
      withdrawalActionId,
      withdrawalActionName,
      uomQuantity,
      withdrawalQuantity,
      quantity,
      dateAdded,
    },
    depositCount,
    withdrawalCount,
  }
}

**************************************************************************************
Deposit Actions
**************************************************************************************

mutation depositAction {
  addDepositAction(
    exchangeId: "",
    name: "Test Action",
    uom: "Minutes",
    uomQuantity: 5,
    depositQuantity: 1,
    enabled: true,
  ) {
    id,
  }
}

mutation depositAction {
  editDepositAction(
    depositActionId: "",
    name: "Test Action Update",
    uom: "Minutes",
    uomQuantity: 10,
    depositQuantity: 1,
  ) {
    id,
  }
}

mutation depositAction {
  deleteDepositAction(
    depositActionId: "",
  )
}

**************************************************************************************
Withdrawal Actions
**************************************************************************************

mutation widthdrawalAction {
  addWithdrawalAction(
    exchangeId: "",
    name: "Test Action",
    uom: "Minutes",
    uomQuantity: 5,
    withdrawalQuantity: 1,
    enabled: true,
  ) {
    id,
  }
}

mutation widthdrawalAction {
  editWithdrawalAction(
    withdrawalActionId: "",
    name: "Test Action Update",
    uom: "Minutes",
    uomQuantity: 10,
    withdrawalQuantity: 1,
  ) {
    id,
  }
}

mutation widthdrawalAction {
  deleteWithdrawalAction(
    withdrawalActionId: "",
  )
}

**************************************************************************************
Deposits
**************************************************************************************

query deposit {
  getDepositById(
    depositId: "",
  ) {
    id,
  }
}

query deposit {
  getDepositsByUserId(
    userId: "",
  ) {
    id,
  }
}

query deposit {
  getDepositsByDepositActionId(
    depositActionId: "",
  ) {
    id,
  }
}

mutation deposit {
  addDeposit(
    depositActionId: "",
    quantity: 1,
  ) {
    deposit {
      id,
    },
    totalDeposits,
    totalFunds,
  }
}

mutation deposit {
  editDeposit(
    depositId: "",
    quantity: 2,
  ) {
    id,
  }
}

mutation deposit {
  deleteDeposit(
    depositId: "",
  )
}

**************************************************************************************
Withdrawals
**************************************************************************************

query withdrawal {
  getWithdrawalById(
    withdrawalId: "",
  ) {
    id,
  }
}

query withdrawal {
  getWithdrawalsByUserId(
    userId: "",
  ) {
    id,
  }
}

query withdrawal {
  getWithdrawalsByWithdrawalActionId(
    withdrawalActionId: "",
  ) {
    id,
  }
}

mutation withdrawal {
  addWithdrawal(
    withdrawalActionId: "",
    quantity: 1.5,
  ) {
    withdrawal {
      id,
    },
    totalWithdrawals,
    totalFunds,
  }
}

mutation withdrawal {
  editWithdrawal(
    withdrawalId: "",
    quantity: 2,
  ) {
    id,
  }
}

mutation withdrawal {
  deleteWithdrawal(
    withdrawalId: "",
  )
}